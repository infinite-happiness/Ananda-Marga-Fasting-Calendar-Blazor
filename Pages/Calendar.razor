@page "/calendar"

<PageTitle>Fasting Calendar</PageTitle>
<form>
<table >
    <tr>
        <td>
            <label for="start-date">Start Date:</label>
            <input type="date" id="start-date" @bind="startDate" />
        </td>
        <td>
            <label for="end-date">End Date:</label>
            <input type="date" id="end-date" @bind="endDate" />
        </td>
    </tr>
    <tr>
        <td>
            <input type="checkbox" id="_24hr-clock" @bind="show24hrClock" />
            <label for="_24hr-clock">24 hour clock</label>
        </td>
        <td title="Your device's local time is shown if not Varanasi time">
            <input type="checkbox" id="show-varanasi-time" @bind="showVaranasiTime" title="Your device's local time is shown if not Varanasi time" />
            <label for="show-varanasi-time">Show Varanasi Time</label>
        </td>
        <td>
            Your device's local time is shown if not Varanasi time
        </td>
    </tr>
</table>
</form>

<iframe src="https://anandamarga.eu/fastingChart.php" style="float:right; width:50%; height:500px;"></iframe>

<table style="display:none;">
    @foreach (var item in GetTithis())
    {
        @if (item.Angle == 300 || item.Angle == 312 || item.Angle == 348 || item.Angle == 0 || item.Angle == 120 || item.Angle == 132 || item.Angle == 168 || item.Angle == 180)
        {
            <tr>
                <td>@item.Angle</td>
                <td>@GetVaranasiDateTime(item.DateTimeUTC)</td>
                <td>@item.Angle</td>
            </tr>
        }
    }
</table>

<table>
    <tr>
        <th>Tithi</th>
        <th>Start</th>
        <th>End</th>
    </tr>
    @foreach (var item in GetOrderedTithis())
    {
            <tr>
                <td>@item.name</td>
                <td>@GetVaranasiDateTime(item.startingItem.DateTimeUTC)</td>
                <td>@GetVaranasiDateTime(item.endingItem.DateTimeUTC)</td>
            </tr>
    }
</table>

@code {
    @using System.Linq;
    @using TithiTools;
    //private static DateTime startDate = new DateTime(2024,01,06);
    //private static DateTime endDate = new DateTime(2024,02,05);
    //private DateTime startDate = DateTime.Now.AddDays(-7);
    private DateTime startDate = DateTime.Now.AddMonths(-7);
    private DateTime endDate = DateTime.Now.AddMonths(1);
    private bool showVaranasiTime = true;
    private bool show24hrClock = true;
    private static readonly TimeZoneInfo VaranasiTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Asia/Kolkata");
    private static readonly TimeZoneInfo LocalTimeZone = TimeZoneInfo.Local;

    class TithiRow
    {
        public string name = "";
        int startAngle;
        int endAngle;
        DateTime startDate;
        DateTime endDate;
        public TithiTools.Tithi startingItem;
        public TithiTools.Tithi endingItem;
    }

    public IList<TithiTools.Tithi> GetTithis()
    {
        return TithiCalc.FindTithiInDateRange(startDate, endDate);
        // https://www.astroica.com/vedic-astrology/tithi-calculator.php
        // https://www.drikpanchang.com/?geoname-id=1275004
    }

    private List<TithiRow> GetOrderedTithis()
    {
        int[] startingAngles = { 300, 348, 120, 168}; // starting angles of ekadashi, amavasya, purnima
        int[] endingAngles = { 312, 0, 132, 180 };
        List<TithiRow> list = new List<TithiRow>();

        foreach (var item in GetTithis())
        {
            if (startingAngles.Contains(item.Angle) )
            {
                TithiRow row = new TithiRow();
                if (item.Angle == 300) row.name = "Ekádashii";
                if (item.Angle == 348) row.name = "Amávasyá";
                if (item.Angle == 120) row.name = "Ekádashii";
                if (item.Angle == 168) row.name = "Púrńimá";
                row.startingItem = item;
                list.Add(row);
            }
            else if (list.Count > 0 && endingAngles.Contains(item.Angle))
            {
                list[^1].endingItem = item; // list[^1] == get last item
            }
            //@if (item.Angle == 300 || item.Angle == 312 || item.Angle == 348 || item.Angle == 0 || item.Angle == 120 || item.Angle == 132 || item.Angle == 168 || item.Angle == 180)
        }
        return list;
    }


    public string GetVaranasiDateTime(DateTime dateTimeUTC)
    {
        var convertedDateTime = TimeZoneInfo.ConvertTimeFromUtc(dateTimeUTC, showVaranasiTime ? VaranasiTimeZone : LocalTimeZone);
        //return convertedDateTime.ToString("yyyy-MM-dd HH:mm:ss");
        return show24hrClock ? convertedDateTime.ToString("dddd, dd MMMM yyyy, HH:mm:ss") : convertedDateTime.ToString("dddd, dd MMMM yyyy, hh:mm:ss tt");
    }
}
